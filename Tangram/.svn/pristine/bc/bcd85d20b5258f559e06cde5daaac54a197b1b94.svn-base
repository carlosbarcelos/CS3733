package tangram.view;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import javax.swing.GroupLayout;
import javax.swing.GroupLayout.Alignment;
import javax.swing.JScrollPane;

import tangram.controller.PieceSelectionController;
import tangram.controller.PuzzleController;
import tangram.model.Model;
import javax.swing.JTextPane;
import javax.swing.LayoutStyle.ComponentPlacement;

public class Application extends JFrame {

	TangramPiecesView piecesView;
	PuzzleView puzzleView;
	
	/** Model for application. */
	Model model;

	/**
	 * Application knows the model.
	 */
	public Application(Model m) {
		this.model = m;
		init();
	}
	
	/**
	 * Use this within WindowBuilder to continue to work within Eclipse. Make package Private
	 * so no one can call it
	 */
	Application() {
		this.model = new Model();
		init();
	}
	
	/** Initialize function was previously generated within constructor, but moved here to be shared. */
	void init() {
		setTitle("Tangram Challenge");
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 816, 531);
		JPanel contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		
		JScrollPane piecesScrollPane = new JScrollPane();
		piecesScrollPane.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
		
		JScrollPane puzzleScrollPane = new JScrollPane();
		puzzleScrollPane.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
		puzzleScrollPane.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);
		
		// replace generate Panel with PuzzleView once that class was defined.
		puzzleView = new PuzzleView(this, model);
		puzzleScrollPane.setViewportView(puzzleView);
		
		// replace generate Panel with TangramPiecesView once that class was defined.
		// JPanel panel = new JPanel();
		piecesView = new TangramPiecesView(model);

		// this sets the internal widget within a scrollable Panel. 
		piecesScrollPane.setViewportView(piecesView);
		
		JTextPane txtpnSelectPiecesFrom = new JTextPane();
		txtpnSelectPiecesFrom.setText("Select pieces from the palette on right by clicking on a piece glyph with mouse. Available pieces are shown in black (while pieces that have been used will appear in gray).Then release the mouse. \r\n\r\nWhen you move the mouse over the puzzle, the selected piece will appear. You can use the mouse wheel to rotate the piece left and right. When satisfied press mouse to play piece. To remove piece from board, press on it with mouse and drag off the board. To reposition piece on the board, press on it and drag with mouse; if you want to change rotation of existing piece while it is being dragged, use the mouseWheel.");
		
		// DON'T MODIFY BY HAND! ALL OF THE FOLLOWING WAS GENERATED BY WINDOWBUILDER
		GroupLayout gl_contentPane = new GroupLayout(contentPane);
		gl_contentPane.setHorizontalGroup(
			gl_contentPane.createParallelGroup(Alignment.TRAILING)
				.addGroup(gl_contentPane.createSequentialGroup()
					.addContainerGap()
					.addGroup(gl_contentPane.createParallelGroup(Alignment.LEADING)
						.addComponent(txtpnSelectPiecesFrom, GroupLayout.DEFAULT_SIZE, 637, Short.MAX_VALUE)
						.addComponent(puzzleScrollPane, GroupLayout.DEFAULT_SIZE, 637, Short.MAX_VALUE))
					.addGap(18)
					.addComponent(piecesScrollPane, GroupLayout.PREFERRED_SIZE, 115, GroupLayout.PREFERRED_SIZE)
					.addContainerGap())
		);
		gl_contentPane.setVerticalGroup(
			gl_contentPane.createParallelGroup(Alignment.TRAILING)
				.addGroup(gl_contentPane.createSequentialGroup()
					.addContainerGap()
					.addGroup(gl_contentPane.createParallelGroup(Alignment.TRAILING)
						.addGroup(gl_contentPane.createSequentialGroup()
							.addComponent(txtpnSelectPiecesFrom, GroupLayout.DEFAULT_SIZE, 82, Short.MAX_VALUE)
							.addGap(18)
							.addComponent(puzzleScrollPane, GroupLayout.PREFERRED_SIZE, 361, GroupLayout.PREFERRED_SIZE))
						.addComponent(piecesScrollPane, GroupLayout.DEFAULT_SIZE, 446, Short.MAX_VALUE))
					.addContainerGap())
		);
		
		contentPane.setLayout(gl_contentPane);

		// install controller. Subtle issue that arose. Have to do here rather than inside puzzleView
		// Basic issue is that some logic requires changes to both PuzzleView and TangramView, so they
		// both need to have been constructed PRIOR to installing/registering controllers.
		PuzzleController pc = new PuzzleController(this, model);
		puzzleView.addMouseListener(pc);
		puzzleView.addMouseMotionListener(pc);
		puzzleView.addMouseWheelListener(pc);
		
		PieceSelectionController psc = new PieceSelectionController(piecesView, model);
		piecesView.addMouseListener(psc);
	}

	/** Navigation methods to actionable elements. */
	public TangramPiecesView getTangramView() {
		return piecesView;
	}

	/** Navigation methods to actionable elements. */
	public PuzzleView getPuzzleView() {
		return puzzleView;
	}
}
